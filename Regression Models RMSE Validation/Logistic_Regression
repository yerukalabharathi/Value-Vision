import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, confusion_matrix
import matplotlib.pyplot as plt
import seaborn as sns

# Load the dataset
data = pd.read_csv(r"C:\Users\birar\OneDrive\Desktop\SRM\ML PROJECT )\Chennai (1).csv")

# Convert the 'Price' column into a binary variable (e.g., 0 if price < median, 1 if price >= median)
median_price = data['Price'].median()
data['Price_Class'] = (data['Price'] >= median_price).astype(int)

# Select relevant numeric features for classification
numeric_features = ['Area', 'No. of Bedrooms', 'Resale', 'MaintenanceStaff', 'Gymnasium', 
                    'SwimmingPool', 'LandscapedGardens', 'JoggingTrack', 'LiftAvailable',
                    'VaastuCompliant', 'Microwave', 'GolfCourse', 'TV', 'DiningTable', 
                    'Sofa', 'Wardrobe', 'Refrigerator']

# Input features and binary target variable
X = data[numeric_features]
y = data['Price_Class']

# Split the dataset into training and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initialize Logistic Regression model
logistic_model = LogisticRegression(max_iter=1000)

# Train the model
logistic_model.fit(X_train, y_train)

# Predict on the test set
y_pred_logistic = logistic_model.predict(X_test)

# Calculate accuracy and confusion matrix
accuracy = accuracy_score(y_test, y_pred_logistic)
conf_matrix = confusion_matrix(y_test, y_pred_logistic)

# Print accuracy and confusion matrix
model_name = "Logistic Regression"
print(f"{model_name}: Accuracy = {accuracy:.2f}")
print(f"Confusion Matrix:\n{conf_matrix}")

# Plot the confusion matrix
plt.figure(figsize=(6, 6))
plt.title(f'{model_name} Confusion Matrix')
sns.heatmap(conf_matrix, annot=True, fmt='d', cmap='Blues', cbar=False)
plt.xlabel('Predicted')
plt.ylabel('Actual')
plt.show()
